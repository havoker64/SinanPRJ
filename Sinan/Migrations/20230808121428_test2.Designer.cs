// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sinan.Data;

#nullable disable

namespace Sinan.Migrations
{
    [DbContext(typeof(AppDBcontext))]
    [Migration("20230808121428_test2")]
    partial class test2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Sinan.Models.Notificacao", b =>
                {
                    b.Property<int>("Idnotify")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdNotify");

                    b.Property<string>("Agravo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("agravoNotify");

                    b.Property<string>("aConciousness")
                        .HasColumnType("longtext")
                        .HasColumnName("aConciousness");

                    b.Property<string>("aOrgans")
                        .HasColumnType("longtext")
                        .HasColumnName("aOrgans");

                    b.Property<string>("afrInsuficiency")
                        .HasColumnType("longtext")
                        .HasColumnName("afrInsuficiency");

                    b.Property<string>("aiDisease")
                        .HasColumnType("longtext")
                        .HasColumnName("aiDisease");

                    b.Property<string>("alarmingDengue")
                        .HasColumnType("longtext")
                        .HasColumnName("alarmingDengue");

                    b.Property<string>("areaKnlg")
                        .HasColumnType("longtext")
                        .HasColumnName("areaKnlg");

                    b.Property<string>("arthritis")
                        .HasColumnType("longtext")
                        .HasColumnName("arthritis");

                    b.Property<string>("astalt")
                        .HasColumnType("longtext")
                        .HasColumnName("astalt");

                    b.Property<string>("bMetrorrhagia")
                        .HasColumnType("longtext")
                        .HasColumnName("bMetrorrhagia");

                    b.Property<string>("backPain")
                        .HasColumnType("longtext")
                        .HasColumnName("backPain");

                    b.Property<DateTime?>("backTravel")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("backTravel");

                    b.Property<string>("cExtremities")
                        .HasColumnType("longtext")
                        .HasColumnName("cExtremities");

                    b.Property<string>("caseEvo")
                        .HasColumnType("longtext")
                        .HasColumnName("caseEvo");

                    b.Property<string>("caseMun")
                        .HasColumnType("longtext")
                        .HasColumnName("caseMun");

                    b.Property<DateTime?>("cfsCollecting")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("cfsCollecting");

                    b.Property<string>("cfsStatus")
                        .HasColumnType("longtext")
                        .HasColumnName("cfsStatus");

                    b.Property<string>("ckDisease")
                        .HasColumnType("longtext")
                        .HasColumnName("ckDiseases");

                    b.Property<DateTime>("closingDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("closingDate");

                    b.Property<string>("cnsBleeding")
                        .HasColumnType("longtext")
                        .HasColumnName("cnsBleeding");

                    b.Property<string>("conClass")
                        .HasColumnType("longtext")
                        .HasColumnName("conClass");

                    b.Property<string>("conjunctivitis")
                        .HasColumnType("longtext")
                        .HasColumnName("conjunctivitis");

                    b.Property<string>("convergentbp")
                        .HasColumnType("longtext")
                        .HasColumnName("convergentbp");

                    b.Property<string>("crTime")
                        .HasColumnType("longtext")
                        .HasColumnName("crTime");

                    b.Property<string>("criterion")
                        .HasColumnType("longtext")
                        .HasColumnName("criterion");

                    b.Property<DateTime?>("cssCollecting")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("cssCollecting");

                    b.Property<string>("cssStatus")
                        .HasColumnType("longtext")
                        .HasColumnName("cssStatus");

                    b.Property<DateTime>("dateinv")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateInv");

                    b.Property<DateTime>("datenotify")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateNotify");

                    b.Property<DateTime>("datesynptoms")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateSynptoms");

                    b.Property<string>("diabetes")
                        .HasColumnType("longtext")
                        .HasColumnName("diabetes");

                    b.Property<DateTime?>("dsCollecting")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dsCollecting");

                    b.Property<string>("dsStatus")
                        .HasColumnType("longtext")
                        .HasColumnName("dsStatus");

                    b.Property<string>("ePlace")
                        .HasColumnType("longtext")
                        .HasColumnName("ePlace");

                    b.Property<string>("eeArea")
                        .HasColumnType("longtext")
                        .HasColumnName("eeArea");

                    b.Property<string>("fever")
                        .HasColumnType("longtext")
                        .HasColumnName("fever");

                    b.Property<DateTime?>("goTravel")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("goTravel");

                    b.Property<string>("hDiseases")
                        .HasColumnType("longtext")
                        .HasColumnName("hDiseases");

                    b.Property<string>("headache")
                        .HasColumnType("longtext")
                        .HasColumnName("headache");

                    b.Property<string>("hematemesis")
                        .HasColumnType("longtext")
                        .HasColumnName("hematemesis");

                    b.Property<string>("hge2cm")
                        .HasColumnType("longtext")
                        .HasColumnName("hge2cm");

                    b.Property<DateTime?>("hospDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("hospDate");

                    b.Property<string>("hospMun")
                        .HasColumnType("longtext")
                        .HasColumnName("hospMun");

                    b.Property<string>("hospName")
                        .HasColumnType("longtext")
                        .HasColumnName("hospName");

                    b.Property<string>("hospUF")
                        .HasColumnType("longtext")
                        .HasColumnName("hospUF");

                    b.Property<string>("hospitalization")
                        .HasColumnType("longtext")
                        .HasColumnName("hospitalization");

                    b.Property<string>("hypertension")
                        .HasColumnType("longtext")
                        .HasColumnName("hypertension");

                    b.Property<string>("iFunction")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("iFunction");

                    b.Property<string>("iLiquids")
                        .HasColumnType("longtext")
                        .HasColumnName("iLiquids");

                    b.Property<string>("iName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("iName");

                    b.Property<string>("iUs")
                        .HasColumnType("longtext")
                        .HasColumnName("iUs");

                    b.Property<DateTime?>("insCollecting")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("insCollecting");

                    b.Property<string>("insStatus")
                        .HasColumnType("longtext")
                        .HasColumnName("insStatus");

                    b.Property<string>("leukopenia")
                        .HasColumnType("longtext")
                        .HasColumnName("leukopenia");

                    b.Property<string>("liverDiseases")
                        .HasColumnType("longtext")
                        .HasColumnName("liverDiseases");

                    b.Property<string>("loIrritability")
                        .HasColumnType("longtext")
                        .HasColumnName("loIrritability");

                    b.Property<string>("lsHypotension")
                        .HasColumnType("longtext")
                        .HasColumnName("lsHypotension");

                    b.Property<string>("medName")
                        .HasColumnType("longtext")
                        .HasColumnName("medName");

                    b.Property<string>("melena")
                        .HasColumnType("longtext")
                        .HasColumnName("melena");

                    b.Property<string>("moBleeding")
                        .HasColumnType("longtext")
                        .HasColumnName("moBleeding");

                    b.Property<string>("motive")
                        .HasColumnType("longtext")
                        .HasColumnName("motive");

                    b.Property<string>("munCon")
                        .HasColumnType("longtext")
                        .HasColumnName("munCon");

                    b.Property<string>("munUf")
                        .HasColumnType("longtext")
                        .HasColumnName("munUf");

                    b.Property<string>("myalgia")
                        .HasColumnType("longtext")
                        .HasColumnName("myalgia");

                    b.Property<string>("myocarditis")
                        .HasColumnType("longtext")
                        .HasColumnName("myocarditis");

                    b.Property<string>("nTieproof")
                        .HasColumnType("longtext")
                        .HasColumnName("nTieproof");

                    b.Property<string>("nausea")
                        .HasColumnType("longtext")
                        .HasColumnName("nausea");

                    b.Property<string>("neighborhood")
                        .HasColumnType("longtext")
                        .HasColumnName("neighborhood");

                    b.Property<DateTime?>("ns1Collecting")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ns1Collecting");

                    b.Property<string>("ns1Status")
                        .HasColumnType("longtext")
                        .HasColumnName("ns1Status");

                    b.Property<string>("occupation")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("occupation");

                    b.Property<string>("organName")
                        .HasColumnType("longtext")
                        .HasColumnName("organName");

                    b.Property<string>("pEncaminhation")
                        .HasColumnType("longtext")
                        .HasColumnName("pEncaminhation");

                    b.Property<string>("pHypotension")
                        .HasColumnType("longtext")
                        .HasColumnName("pHypotension");

                    b.Property<string>("pMedication")
                        .HasColumnType("longtext")
                        .HasColumnName("pMedication");

                    b.Property<string>("pTieproof")
                        .HasColumnType("longtext")
                        .HasColumnName("pTieproof");

                    b.Property<string>("pVomiting")
                        .HasColumnType("longtext")
                        .HasColumnName("pVomiting");

                    b.Property<string>("paDisease")
                        .HasColumnType("longtext")
                        .HasColumnName("paDisease");

                    b.Property<string>("patientClass")
                        .HasColumnType("longtext")
                        .HasColumnName("patientClass");

                    b.Property<string>("petechiae")
                        .HasColumnType("longtext")
                        .HasColumnName("petechiae");

                    b.Property<string>("piHematocrit")
                        .HasColumnType("longtext")
                        .HasColumnName("piHematocrit");

                    b.Property<string>("plateletsFall")
                        .HasColumnType("longtext")
                        .HasColumnName("plateletsFall");

                    b.Property<string>("pregnant")
                        .HasColumnType("longtext")
                        .HasColumnName("pregnant");

                    b.Property<DateTime?>("prntCollecting")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("prntCollecting");

                    b.Property<string>("prntStatus")
                        .HasColumnType("longtext")
                        .HasColumnName("prntStatus");

                    b.Property<string>("rash")
                        .HasColumnType("longtext")
                        .HasColumnName("rash");

                    b.Property<string>("recentTravel")
                        .HasColumnType("longtext")
                        .HasColumnName("recentTravel");

                    b.Property<string>("retroorbitalPain")
                        .HasColumnType("longtext")
                        .HasColumnName("retroorbitalPain");

                    b.Property<DateTime?>("rtpcrCollecting")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("rtpcrCollecting");

                    b.Property<string>("rtpcrStatus")
                        .HasColumnType("longtext")
                        .HasColumnName("rtpcrStatus");

                    b.Property<string>("scaPain")
                        .HasColumnType("longtext")
                        .HasColumnName("scaPain");

                    b.Property<string>("serotype")
                        .HasColumnType("longtext")
                        .HasColumnName("serotype");

                    b.Property<string>("severeArthralgia")
                        .HasColumnType("longtext")
                        .HasColumnName("severeArthralgia");

                    b.Property<string>("severeDengue")
                        .HasColumnType("longtext")
                        .HasColumnName("severeDengue");

                    b.Property<DateTime?>("sinDateinit")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("sinDateinit");

                    b.Property<string>("srtSelect")
                        .HasColumnType("longtext")
                        .HasColumnName("srtSelect");

                    b.Property<string>("suscard")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("suscard");

                    b.Property<string>("tachycardia")
                        .HasColumnType("longtext")
                        .HasColumnName("tachycardia");

                    b.Property<string>("travelPlace")
                        .HasColumnType("longtext")
                        .HasColumnName("travelPlace");

                    b.Property<string>("us")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("usNotify");

                    b.Property<string>("visitor")
                        .HasColumnType("longtext")
                        .HasColumnName("visitor");

                    b.Property<string>("vomit")
                        .HasColumnType("longtext")
                        .HasColumnName("vomit");

                    b.Property<string>("wuPulse")
                        .HasColumnType("longtext")
                        .HasColumnName("wuPulse");

                    b.HasKey("Idnotify");

                    b.ToTable("notificacao");
                });

            modelBuilder.Entity("Sinan.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("address");

                    b.Property<string>("ancestry")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("ancestry");

                    b.Property<DateTime>("birthdate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("birthdate");

                    b.Property<long>("cep")
                        .HasColumnType("bigint")
                        .HasColumnName("cep");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("gender");

                    b.Property<decimal>("height")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("height");

                    b.Property<string>("momname")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("momname");

                    b.Property<string>("municipality")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("municipality");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("neighborhood")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("neighborhood");

                    b.Property<long>("phone")
                        .HasColumnType("bigint")
                        .HasColumnName("phone");

                    b.Property<string>("schooling")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("schooling");

                    b.Property<string>("suscard")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("suscard");

                    b.Property<string>("uf")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("uf");

                    b.Property<decimal>("weight")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("weight");

                    b.Property<string>("zone")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("zone");

                    b.HasKey("Id");

                    b.ToTable("paciente");
                });
#pragma warning restore 612, 618
        }
    }
}
